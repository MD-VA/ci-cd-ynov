name: Build, Test, Version, and Deploy React Application

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: npm ci, build, and test
        run: |
          npm ci
          npm run build --if-present
          npm test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Set version
        id: set_version
        run: |
          version="v${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}"
          echo "Version: $version"
          echo "::set-output name=version::$version"  # Set the version as an output

      - name: Update README with version
        run: |
          echo "Current Version: ${{ steps.set_version.outputs.version }}" >> README.md
          echo "Previous Version: ${{ steps.previous_version.outputs.previous_version }}" >> README.md  # Assuming previous_version is set in the update_version_and_readme job

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: build  # Ensure this matches the directory containing the artifacts
          if-no-files-found: error
          name: build  # Ensure this matches the name of the artifact
          version: ${{ steps.set_version.outputs.version }}

  update_version_and_readme:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - name: Download previous artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: Set previous version
        id: set_previous_version
        run: |
          echo "Previous Version: $(cat build/version.txt)"
          echo "::set-output name=previous_version::$(cat build/version.txt)"  # Set the previous version as an output

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.build_test.outputs.pages_url }}
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    needs: update_version_and_readme
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2
        with:
          # ... (existing configuration)
          version: ${{ needs.build_test.outputs.version }}
